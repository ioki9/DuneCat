name: CMake cross-platform build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  strategy:
    matrix:
      include:
        - os: macos-latest
          qtArch: clang_64
        - os: windows-latest
          qtArch: win64_msvc2019_64
      
      runs-on: ${{matrix.os}}
      permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
          version: '6.4.2'
          target: 'desktop'
          arch: ${{matrix.qtArch}}
          dir: '${{ github.workspace }}/Qt6Lib/'
          install-deps: 'true'
          cache: 'true'
          cache-key-prefix: 'install-qt-action-${{matrix.os}}'
          set-env: 'true'
          tools-only: 'false'
          aqtversion: '==2.1.*'
          py7zrversion: '==0.19.*'

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -S ${{github.workspace}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
