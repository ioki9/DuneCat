name: CMake win/mac/ubuntu build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            qtArch: clang_64
            qtHost: mac
            CXX: clang++
            CC: clang
          - os: windows-latest
            qtArch: win64_mingw
            qtHost: windows
            CXX: g++
            CC: gcc
          - os: ubuntu-latest
            qtArch: gcc_64
            qtHost: linux
            CXX: g++
            CC: gcc
    runs-on: ${{matrix.os}}
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
          version: '6.4.2'
          target: 'desktop'
          arch: ${{matrix.qtArch}}
          host: ${{matrix.qtHost}}
          dir: '${{ github.workspace }}/Qt6Lib/'
          install-deps: 'true'
          cache: 'true'
          cache-key-prefix: 'install-qt-action-${{matrix.os}}'
          set-env: 'true'
          aqtversion: '==3.1.*'
          py7zrversion: '==0.19.*'
#    - name: Configure and build this project
#      uses: threeal/cmake-action@latest
#      with:
#        generator: Ninja
#        c-compiler: ${{matrix.CC}}
#        cxx-compiler: ${{matrix.CXX}}
#        run-test: false
#        targets: all
#        args: -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -S ${{github.workspace}} -DCMAKE_CXX_COMPILER = g++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      if: matrix.os != 'ubuntu-latest'
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --output-on-failure -C ${{env.BUILD_TYPE}}
      
